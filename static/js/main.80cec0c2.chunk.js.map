{"version":3,"sources":["exercises/player/assets/play.svg","components/allDescriptions/DescA.js","components/allDescriptions/DescC.js","components/allDescriptions/DescD.js","components/allDescriptions/DescE.js","components/allDescriptions/DeskB.js","context/MyContext.js","pages/descript/Descript.js","components/headExercise/DescExercise.js","components/statistic/Statistic.js","pages/home/Home.js","components/footer/Footer.js","components/header/Header.js","components/headEgzam/HeadEgzam.js","components/headExercise/HeadExercise.js","components/navEgzam/NavEgzam.js","exercises/Timer.js","components/navExercise/NavExercise.js","exercises/player/assets/pause.svg","exercises/catA/SubCatA1.js","hoc/AddClass.js","exercises/player/TimeIterate.js","exercises/player/AudioControls.jsx","exercises/player/AudioPlayer.jsx","components/points/Points.js","exercises/catA/SubCatA3.js","pages/baseScreen/BaseScreen.js","components/layout/Layout.js","exercises/catA/A11.js","tracks/A1_1.mp3","exercises/catA/A12.js","tracks/A1_2.mp3","exercises/catA/A13.js","tracks/A1_3.mp3","tracks/A2_1.mp3","exercises/catA/A21.js","tracks/sound.mp3","exercises/catA/A31.js","tracks/A3_1.mp3","exercises/AllCatDef.js","App.js","reportWebVitals.js","index.js"],"names":["_path","DescA","className","DescC","DescD","style","textAlign","float","maxWidth","padding","clear","DescE","DescB","MyContext","createContext","Descript","state","useContext","inputCat","inputMode","to","DescCatHeader","selCatA","selCatB","selCatC","selCatD","selCatE","HeadDescExe","formatTime","secs","minutes","Math","floor","seconds","Statistic","arrStatistic","length","sumRightPoints","sumAllPoints","round","fullTime","id","Object","keys","map","item","i","colSpan","selectSubCat","numQuestion","quantity","points","curRightPoints","curAllPoints","timer","Home","radioValCat","radioValMode","type","name","value","onChange","defaultChecked","htmlFor","disabled","onClick","divMore","document","getElementById","Footer","Header","props","HeadEgzam","HeadExercise","saveSubCat","saveNumQuestion","hintModeHandler","subCat","checkExe","categories","hintMode","dangerouslySetInnerHTML","__html","NavEgzam","sec","Timer","this","setState","x","interval","setInterval","tick","clearInterval","React","Component","NavExercise","next","prev","btnExit","isChecked","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPlay","_ref","svgRef","title","titleId","width","height","viewBox","fill","xmlns","ref","fillRule","clipRule","d","ForwardRef","SvgPause","globalComp","globalMethod","ClassName","setTime","backCount","TimeIterate","iterate","timeEnd","onPlay","AudioControls","isPlaying","onPlayPauseClick","timerHTML","onPrevClick","onNextClick","durationHTML","aria-label","AudioPlayer","useState","trackIndex","setTrackIndex","trackProgress","setTrackProgress","setIsPlaying","setTimeEnd","tracks","audioSrc","audioRef","useRef","Audio","intervalRef","isReady","duration","current","currentPercentage","trackStyling","startTimer","ended","toNextTrack","currentTime","onScrubEnd","useEffect","play","pause","step","min","max","e","onMouseUp","onKeyUp","background","Points","sumPoints","timerOfComponent","Bold","event","arrayParent","parentElement","children","arrClassP","split","forEach","element","index","strClassP","join","classElem","SubCatA1","save","arrContent","countCard","str","card","divB","divBl","item2","i2","letter","num","decLetter","word","cursor","decoder","DivRow","block","EndSubCatA1","header","template","position","SubCatA3","DivText","textJSX","paragraf","textArr","count","text","push","readOnly","size","ki","ks","placeholder","answer","BaseScreen","sendComponent","isChanged","AddClass","path","exact","render","ArrA11","pH","p1","pA","p2","ArrA12","ArrA13","ArrA21","track1","ArrA31","AllCat","App","classEvent","compN","a","arrElemAnswer","querySelectorAll","hint","rightAnswer","color","arr","arrCurStatist","numSubCat","numQuest","incSubCat","incQuest","decSubCat","decQuest","radVal","ele","getElementsByName","checked","selectedIndex","console","log","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","app","StrictMode","ReactDOM"],"mappings":"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","file":"static/js/main.80cec0c2.chunk.js","sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlay(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 16,\n    viewBox: \"0 0 14 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M11.907 7.99997L1.75 2.10772V13.8922L11.907 7.99997ZM13.293 6.78197C13.5076 6.90481 13.6858 7.08214 13.8098 7.29602C13.9339 7.5099 13.9992 7.75275 13.9992 7.99997C13.9992 8.2472 13.9339 8.49004 13.8098 8.70392C13.6858 8.9178 13.5076 9.09514 13.293 9.21797L2.15775 15.679C1.24775 16.2075 0 15.6037 0 14.461V1.53897C0 0.396223 1.24775 -0.207528 2.15775 0.320972L13.293 6.78197Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlay);\nexport default __webpack_public_path__ + \"static/media/play.751c39f9.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport './allDesc.css'\r\n\r\nexport const DescA = ()=>{\r\n    return(\r\n        <div className='allDesc'>\r\n            <p>Część A</p>\r\n            <h3>Rozumienie ze słuchu</h3>\r\n            <p>Maksymalna liczba punktów — 40 </p>\r\n            <p>Czas przeznaczony na wykonanie zadań - 30 min</p>\r\n            <h5>Warunkiem zdania egzaminu jest uzyskanie pozytywnego wyniku (minimum 60%, czyli 24p.) z każdej części egzaminu </h5>\r\n            <h5> Ogólny opis umiętności</h5>\r\n            <p> Zdający powinni rozumieć pojedyncze wypowiedzi, wypowiedzi w ramach dialogu i rozmowy z udziałem kilku osób, dłuższe wypowiedzi monologowe (w tym informacje, prezentacje, ogłoszenia i instrukcje) w zakresie wskazanym w Standardach wymagań egzaminacyjnych. Zdający powinni umieć upewnićsię, czy właściwie zrozumieli treśći intencję wypowiedzi, oraz potrafić poprosić o powtórzenie, wyjaśnienie fragmentu wypowiedzi lub zapisanie niezrozumiałego słowa.</p>\r\n            <h5> Wskazówki dla przygotowujących się do egzaminu </h5>\r\n            <p>Ta część egzaminu składa się z 4 lub 5 zadań. Zawarte tu teksty to krótkie komunikaty, fragmenty rozmów, nagrania programów radiowych i telewizyjnych oraz teksty preparowane na użytek egzaminu. Do każdego nagrania należy wykonać zadanie. <b>Uwaga! Zwykle nagrania odtwarzanesą dwarazy, ale jedno — tylko jeden raz.</b> Teksty do wysłuchania prezentowane są z płyty CD lub kasety i niemożliwe jest zatrzymanie lub ponowne odtworzenie płyty (kasety). W związku z tym w tej części egzaminu zadania muszą być wykonane we wskazanej kolejności, a aktywność egzaminatora ogranicza się do rozdania testów oraz do włączenia nagrania. Dlatego wszystkie pytania i ewentualne wątpliwości należy rozstrzygać tuż po otrzymaniu testu — w czasie słuchania nie jest to możliwe. Przed każdym nagraniem pojawia się moment ciszy. Należy go wykorzystać na przeczytanie zadania, żeby wiedzieć, które z usłyszanych informacji będą ważne. Natomiast podczas chwili przerwy przed drugim odtworzeniem tego samego tekstu należy zrobić korektę zapisanych już słów (zdań) i zastanowić się nad brakującymi informacjami.</p>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}","import React from 'react'\r\nimport './allDesc.css'\r\n\r\nexport const DescC = ()=>{\r\n    return(\r\n        <div className='allDesc'>\r\n             <p>Część C</p>\r\n            <h3>Rozumienie tekstów pisanych</h3>\r\n            <p>Maksymalna liczba punktów — 40 </p>\r\n            <p>Czas przeznaczony na wykonanie zadań — 45 min</p>\r\n            <h5> Warunkiem zdania egzaminu jest uzyskanie pozytywnego wyniku (minimum 60%, czyli 24p.) z każdej części egzaminu. </h5>\r\n            <h5> Ogólny opis umiętności</h5>\r\n            <p>Zdający powinni rozumieć pojedyncze napisyi ogłoszenia, fragmenty tekstów długości jednego akapitu oraz kompletne krótkie teksty (160-250 słów) o tematyce zgodnej z wymaganiami zawartymi w Standardach wymagań egzaminacyjnych. Kandydaci powinni rozumieć ogólny sens tekstu oraz konkretnych informacji w nim zawartych.</p>\r\n            <h5> Wskazówki dla przygotowujących się do egzaminu </h5>\r\n            <p>W tej części, podobnie jak w części A (rozumienieze słuchu), oczekuje się od zdającego globalnego i/lub szczegółowego rozumienia tekstu — tym razem pisanego. Różnica polega na tym, że w części C zdający może wielokrotnie wracać do zadania. W odniesieniu do obydwu sprawności można zastosować podobne strategie — przede wszystkim podkreślanie istotnych informacji w tekście. Jeśli to nie jest konieczne, lepiej nie tracić czasu na dokładną analizę całego tekstu i zastanawianie się nad znaczeniem każdego słowa, ponieważ niezrozumienie pojedynczych słów zwykle nie utrudnia wykonania zadania. Należy skoncentrować się na fragmentach wyznaczanych przez pytania lub na kontekście wyrazów usuniętych z tekstu. W tej części powinno znaleźć się nie więcej niż 5 zadań. Najczęściej spotykane rodzaje tekstów to: pojedyncze napisy, ogłoszenia, fragmenty oryginalnych tekstów prasowych, listy prywatne i oficjalne, ulotki oraz notatki.</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './allDesc.css'\r\n\r\nexport const DescD = ()=>{\r\n    return(\r\n        <div className='allDesc'>\r\n             <p>Część D</p>\r\n            <h3>Pisanie</h3>\r\n            <p>Maksymalna liczba punktów — 40 </p>\r\n            <p>Czas przeznaczony na wykonanie zadań — 90 min</p>\r\n            <h5> Warunkiem zdania egzaminu jest uzyskanie pozytywnego wyniku (minimum 60%, czyli 24p.) z każdej części egzaminu. </h5>\r\n            <h5> Ogólny opis umiętności</h5>\r\n            <p>Zdający powinni opanować relacje głoska - litera, podstawowe zasady ortografii i interpunkcji oraz zasady kompozycji tekstów pisanych, ze zwróceniem uwagi na styl oficjalny i nieoficjalny, zgodnie z wymaganiami zawartymi w Standardach wymagań egzaminacyjnych.</p>\r\n            <h5> Wskazówki dla przygotowujących się do egzaminu </h5>\r\n            <p>Ta część egzaminu polega na napisaniu dwóch tekstów. Należy wybrać jeden zestaw spośród trzech i wykonać obydwa polecenia (punkt a i b). Pierwsze zadanie to zredagowanie krótkiego tekstu o określonej formie (np. życzenia, pozdrowienia, ogłoszenie). Warto przypomnieć sobie, jaką strukturą charakteryzuje się konkretna forma, np. zaproszenie to nagłówki, zwroty do adresata, daty czy dane adresowe. W drugim zadaniu należy napisać dłuższy tekst,np.list oficjalny lub nieoficjalny, opis, tekst argumentacyjny lub opowiadanie, podstawową formą życiorysu lub podania. </p>\r\n            <p><b>Uwaga! Długość napisanego tekstu powinna być zgodna z liczbą słów podanych wpoleceniu. W zadaniu </b><i>a</i><b> jest to najczęściej 20—30 słów, w zadaniu </b><i>b</i> <b>170—180 słów. </b></p>\r\n            <p>Warto poświęcić kilka minut na dokładne przemyślenie wyboru zestawu.</p>\r\n            <p>Przed rozpoczęciem pisania dobrze jest sporządzić ramowy plan do każdego zdwóch tekstów. Powinien on zawierać wypunktowane informacje i argumenty. Aby nie tracić czasu na liczenie wyrazów podczas egzaminu, można wcześniej w domu wykonać „próbę ilościową”: zapisać odręcznie na arkuszu A4 około sześciu linijek, potem policzyć, ile słów zawiera ten tekst, a następnie wyliczoną liczbę słów podzielić przez liczbę linijek. Uzyskany w ten sposób wynik będzie średnią słów, które zwykle mieszczą się w jednej linijce. Można wtedy na egzaminie liczyć linijki, a nie słowa.</p>\r\n            <p>Niektóre osoby pierwszą wersję tekstu zapisują w brudnopisie. Egzaminatorzy oceniają jednak wyłącznie czystopis. Zatem należy tak rozplanować czas, aby wystarczyło go jeszcze na przepisanie tekstu na arkusze do tego przeznaczone. </p>\r\n            <p>Wypowiedź pisemna oceniana jest niezależnie przez dwie osoby. Wynik testu to suma punktów obu egzaminatorów. Oceniane są: wykonanie zadania(treść, długość, forma, kompozycja), poprawność gramatyczna, słownictwo, styl, ortografia i interpunkcja.</p>\r\n            <div className='pattern'>\r\n                <h4 style={{textAlign:'center'}}>PRZYKŁADY:</h4>\r\n                <hr></hr>\r\n                <h5 style={{textAlign:'center'}}>List oficjalny formalny</h5>\r\n                <div style={{float:'left', maxWidth:'150px', padding:'20px'}}>\r\n                    <p>Anna Kowalska</p>\r\n                    <p>ul. Kwiatowa 4b/12</p> \r\n                    <p>78-432 Łuków</p> \r\n                    <p>Szanowny Pan</p> \r\n                    <p>Jerzy Nowak</p> \r\n                    <p>Minister Środowiska</p> \r\n                    <p>ul. Wiejska</p> \r\n                    <p>6 00-136Warszawa</p>\r\n                </div>\r\n                <div style={{float:'right', maxWidth:'150px', padding:'20px'}}>Łuków, 01.08.2007</div>\r\n                <div style={{clear:'both'}}></div>\r\n                <p>Szanowny Panie Ministrze,</p>\r\n                <p>jestem uczennicą Gimnazjum nr 1 w Łukowie. Razem z koleżankamii kolegami z klasy protestujemy przeciwko wysypisku śmieci w naszej miejscowości. Wysypisko znajduje się w lesie, niedaleko budynków mieszkalnych. Czuć tam bardzo nieprzyjemny zapach. Śmieci dostają się do ziemi i zanieczyszczają ją, przez co umierają niektóre gatunki kwiatów i roślin. Nie chcemy, aby zabierano nam czyste powietrze i bogactwo lasu. </p>\r\n                <p>Kiedyś było to miejsce codziennych spacerów wielu mieszkańców naszego miasta — przepiękna przyroda, czysta rzeka, cudowne krajobrazy zachęcały do takiego spędzania wolnego popołudnia. Teraz nikt tu nie przychodzi. </p>\r\n                <p>Piszemy bezpośrednio do Pana Ministra, ponieważ władze naszego miasta nie chcą z nami rozmawiać. </p>\r\n                <p>Niecierpliwie czekamyna odpowiedźi bardzo prosimy o pomoc. </p>\r\n                <p>Łączę wyrazy szacunku</p>\r\n                <div style={{float:'right', maxWidth:'300px', padding:'20px'}}>Anna Kowalska z uczniami klasy III c</div>\r\n                <div style={{clear:'both'}}></div>\r\n                <hr></hr>\r\n\r\n                <h5 style={{textAlign:'center'}}>List nieoficjalny nieformalny</h5>\r\n                <div style={{float:'right', maxWidth:'300px', padding:'20px'}}>Nowy Targ, 20 marca 2008</div>\r\n                <div style={{clear:'both'}}></div>\r\n                <p>Droga Małgosiu!</p>\r\n                <p>Dziękuję za Twój list i za zdjęcia. Są śliczne i przypominają o naszych wakacjach. Przepraszam, że nie pisałam do Ciebie wcześniej, ale miałam trochę problemów.</p>\r\n                <p>W październiku mój mąż miał wypadek samochodowy i był w szpitalu dwa miesiące. Potem czekała go rehabilitacja i trzeba go było wozić na gimnastykę, a ja nie mam prawa jazdy. Musiałam poprosić o pomoc teściową. Teraz mąż czuje się już lepiej, ale ma jeszcze problemy z chodzeniem. </p>\r\n                <p>Jakby tego było mało, przed Bożym Narodzeniem mój szef zaprosił mnie na rozmowę i powiedział, że firma nie przedłuży ze mną umowy. Byłam załamana, ale kilka dni później znalazłam w gazecie ogłoszenie i wysłałam swoją ofertę. Poszłam na rozmowę kwalifikacyjną i chyba się spodobałam, bo od stycznia mam nową pracę.Jestem zadowolona, bo choć moja nowa pensja nie jest wyższa niż w starej firmie, atmosfera w biurze jest dużo lepsza, a do pracy mogę chodzić pieszo. Dzięki temu mogę teraz spać godzinę dłużej, choć pracę zaczynam o tej samej porze! </p>\r\n                <p>Musisz nas koniecznie odwiedzić! Zadzwoń tylko, proszę, kilkadni wcześniej, bo dwa razy w tygodniu jeżdżę z mężem na rehabilitację. </p>\r\n                <p>Serdecznie Cię pozdrawiam!</p>\r\n                \r\n                <div style={{float:'right', maxWidth:'300px', padding:'20px'}}>Iza</div>\r\n                <div style={{clear:'both'}}></div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}","import React from 'react'\r\nimport './allDesc.css'\r\n\r\nexport const DescE = ()=>{\r\n    return(\r\n        <div className='allDesc'>\r\n             <p>Część E</p>\r\n            <h3>Mówienie</h3>\r\n            <p>Maksymalna liczba punktów — 40 </p>\r\n            <p>Czas przeznaczony na wykonanie zadań — 15 min</p>\r\n            <h5> Warunkiem zdania egzaminu jest uzyskanie pozytywnego wyniku (minimum 60%, czyli 24p.) z każdej części egzaminu. </h5>\r\n            <h5> Ogólny opis umiętności</h5>\r\n            <p>Zdający na poziomie B1 powinni umieć posługiwaćsię językiem polskim w typowych sytuacjach komunikacyjnych w sposób płynny, nieutrudniający komunikacji. Muszą spełniać wymagania zawarte w Standardach wymagań egzaminacyjnych\". </p>\r\n            <p>Zdający powinni umieć: </p>\r\n            <ul>\r\n                <li>rozpoczynać i kończyć rozmowę, a także brać w niej udział (wyrażać własne opinie, wymieniać informacje na znane i związane z zainteresowaniami tematy); </li>\r\n                <li>stosować podstawowe zasady prowadzenia rozmów telefonicznych;</li>\r\n                <li>tworzyć proste, spójne wypowiedzi na temat własnych zainteresowań, doświadczeń, marzeń i planów; </li>\r\n                <li>wyrażać i uzasadniać własne poglądy; </li>\r\n                <li>opisywać i relacjonować zdarzenia oraz streszczać w prosty sposób przeczytany tekst; </li>\r\n                <li>kontrolować przebieg rozmowy, prosząc, gdy zachodzi potrzeba, o powtórzenie, wyjaśnienie, przeliterowanie itp.;</li>\r\n                <li>upewnić się, czy są właściwie rozumiani i czy używają odpowiednich słów i form; </li>\r\n                <li>operować formami stylu oficjalnego i nieoficjalnego, odpowiednio do sytuacji;</li>\r\n                <li>stosować zasady wymowy i intonacji pozwalające na właściwe zrozumienie wyrażanych intencji oraz treści wypowiedzi (wpływ zasad wymowy języka rodzimego może być odczuwalny, ale nie powinien zakłócać zrozumienia wypowiedzi).</li>\r\n            </ul>\r\n            <h5> Wskazówki dla przygotowujących się do egzaminu </h5>\r\n            <h5> Budowa egzaminu ustnego i typy zadań </h5>\r\n            <p>Komisja składa się zwykle z trzech osób, ale ze zdającym rozmawia tylko jedna z nich, chociaż w interakcję włącza się jeszcze jeden z egzaminatorów. Wypowiedzi oceniają niezależnie od siebie dwie osoby. Oceniane są: sprawność komunikacyjna, wykonanie zadania, poprawność gramatyczna, słownictwo, wymowa i intonacja. </p>\r\n            <p>Przed przystąpieniem do egzaminu zdający może przygotować swoją wypowiedź — ma na to kilka minut. Na początku egzaminator zadaje kilka pytań „rozgrzewających” i służących nawiązaniu kontaktu. Dotyczyć one mogą np. zainteresowania językiem polskim czy wykonywanego zawodu. Ta część wypowiedzi nie podlega ocenie. Egzamin ustny polega nawylosowaniu zestawu, w którym znajdują się trzy zadania (należy wykonać wszystkie trzy w dowolnej kolejności): </p>\r\n            <p>A. opis fotografii (sytuacji na niej przedstawionej);</p>\r\n            <p>B. monolog (wypowiedź na podany temat); </p>\r\n            <p>C. sytuacja komunikacyjna (dialog z egzaminatorem).</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './allDesc.css'\r\n\r\nexport const DescB = ()=>{\r\n    return(\r\n        <div className='allDesc'>\r\n            <p>Część B</p>\r\n            <h3>Poprawność gramatyczna</h3>\r\n            <p>Maksymalna liczba punktów - 40 </p>\r\n            <p>Czas przeznaczony na wykonanie zadań — 60 min</p>\r\n            <h5> Warunkiem zdania egzaminu jest uzyskanie pozytywnego wyniku (minimum 60%, czyli 24p.) z każdej części egzaminu. </h5>\r\n            <h5> Ogólny opis umiętności</h5>\r\n            <p>Zdający powinni umieć rozpoznawać i stosować poprawne gramatycznie formy językowe, pozwalające na wyrażanie intencji mówiącego w zakresie sprecyzowanym w Standardach wymagań egzaminacyjnych. Błędy gramatyczne popełniane przez zdających w wypowiedziach mówionych i tekstach pisanych nie powinny uniemożliwiać zrozumienia treści i intencji wypowiedzi.</p>\r\n            <h5> Wskazówki dla przygotowujących się do egzaminu </h5>\r\n            <p>Sukces w tej części egzaminu zależy od wcześniejszego przyswojenia wiedzy gramatycznej i wykonania odpowiedniej liczby ćwiczeń. Ważną rzeczą jest uporządkowanie przed egzaminem (w formie tabel czy zestawień) trudniejszych zagadnień, np. rekcji czasowników, wzorów tworzenia poszczególnych form. </p>\r\n            <p>Każde z zadań bada inny problem gramatyczny, np.: stopniowanie przymiotnika, aspekt czasownika, odmianę rzeczownika i przymiotnika. Zadania oparte są na krótkich tekstach, których należy utworzyć poprawną formę gramatyczną wyrazów w nawiasie lub wybrać spośród podanych tę prawidłową. Mogą pojawić się też zdania izolowane. </p>\r\n            <p>Egzamin certyfikacyjny zawiera od 8 do 11 zadań. Decyzja o kolejności wykonywania zadań należy do zdającego. Warto z tego skorzystać i na początku przejrzeć cały test, żeby rozpocząć od zadań, które wydają się najłatwiejsze. Do tych sprawiających kłopoty można wrócić na końcu.</p>\r\n            <p>Jeśli okaże się, że jakaś forma gramatyczna, która powinna pojawić się w danym kontekście, stanowi trudność, nie należy się poddawać — lepiej wpisać cokolwiek, niż zostawić puste miejsce. <b>Ta uwaga dotyczy wszystkich zadań: za złą odpowiedź nie traci się punktów.</b> W miarę możliwości czasowych dobrze jest po rozwiązaniu wszystkich zadań przeczytać je jeszcze raz. </p>\r\n            <p><b>Uwaga! Zawsze należy uważnie przeczytać polecenie i przykład, ponieważ tam znajdują się ważne wskazówki!\r\n</b></p>\r\n        </div>\r\n    )\r\n}","import {createContext} from 'react'\r\n\r\n\r\nexport const MyContext = createContext()","import React, { useContext } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { DescA } from '../../components/allDescriptions/DescA'\r\nimport { DescC } from '../../components/allDescriptions/DescC'\r\nimport { DescD } from '../../components/allDescriptions/DescD'\r\nimport { DescE } from '../../components/allDescriptions/DescE'\r\n//import { DescEgz } from '../../temporary/DescEgz'\r\nimport { DescB } from '../../components/allDescriptions/DeskB'\r\n\r\nimport { MyContext } from '../../context/MyContext'\r\nimport './descript.css'\r\n\r\nexport const Descript = ()=>{\r\n    \r\n    const {state}=useContext(MyContext)\r\n    return(\r\n        <div className='descript'>\r\n            <div className='descriptWrap'>\r\n                {/* {(state.inputMode==='selMode2')?<DescEgz></DescEgz>:null} */}\r\n                {(state.inputCat ==='selCatA')&&(state.inputMode ==='selMode1')?<DescA></DescA>:null}\r\n                {(state.inputCat ==='selCatB')&&(state.inputMode ==='selMode1')?<DescB></DescB>:null}\r\n                {(state.inputCat ==='selCatC')&&(state.inputMode ==='selMode1')?<DescC></DescC>:null}\r\n                {(state.inputCat ==='selCatD')&&(state.inputMode ==='selMode1')?<DescD></DescD>:null}\r\n                {(state.inputCat ==='selCatE')&&(state.inputMode ==='selMode1')?<DescE></DescE>:null}\r\n\r\n                <hr></hr>\r\n                <button >\r\n                    <NavLink to='/baseScreen'>Dalej</NavLink>\r\n                    {/* <a href='/baseScreen'>Dalej</a> */}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nexport const DescCatHeader={\r\n    selCatA:['Część A','Rozumienie ze słuchu'],\r\n    selCatB:['Część B','Poprawność gramatyczna'],\r\n    selCatC:['Część C','Rozumienie tekstów pisanych'],\r\n    selCatD:['Część D','Pisanie'],\r\n    selCatE:['Część E','Mówienie']\r\n}\r\n\r\nexport const HeadDescExe ={\r\n    selCatA:[\r\n        ['Zadania z jednostkami wyboru wielokrotnego','Taki typ ćwiczenia może mieć różne formy. Jedną z nich jest zadanie, które odtwarzane jest tylko jeden raz. Zdający wysłuchuje krótkiego komunikatu, a następnie musi zdecydować, co oznacza wypowiedź lub gdzie jest możliwa do usłyszenia. Warto przeczytać wszystkie odpowiedzi przed usłyszeniem komunikatu. Wybiera się spośród trzech możliwości: jedna z nich jest nieprawdopodobna, druga możliwa, a tylko jedna prawidłowa.'],\r\n\r\n        ['Zadania z wyborem wielokrotnym','Inną formą zadania z wyborem wielokrotnym są dłuższe wypowiedzi jednej lub kilku osób. Przed wysłuchaniem nagrania należy przeczytać tylko pierwsze części zdań i pominąć warianty odpowiedzi, aby nie wprowadzały w błąd'],\r\n\r\n        ['Zadania z lukami do uzupełnienia','Zadanie polega na uzupełnieniu usłyszanymi wyrazami luk w tekście, który zdający w niepełnej wersji ma przed sobą. Przed wysłuchaniem nagrania warto się zastanowić, czego brakuje [np. rzeczownika, czasownika], a także z jakim tematem mogą być związane wyrazy, które należy wpisać.'],\r\n\r\n        ['Zadania z jednostkami prawda/fałsz (P/F)','Przed wysłuchaniem nagrania należy przeczytać tekst zadania i podkreślić słowa kluczowe [np. imiona, nazwiska, miejsca czy daty), co pomoże zaznaczyć dobre odpowiedzi. Należy wykonywać zadanie już w trakcie słuchania, a po zakończeniu nagrania przyjrzeć się swoim odpowiedziom.'],\r\n\r\n        ['Zadania z jednostkami na dobieranie informacji','To zadanie zwykle polega na dopasowaniu do wypowiedzi kilku osób odpowiednich informacji. Takie zadanie odróżnia się graficznie od pozostałych, ponieważ zwykle podzielone jest na dwie kolumny. Najczęściej należy wpisać odpowiednie litery lub numery przy kolejnych wypowiedziach. Dlatego warto wcześniej uważnie przeczytać zadanie zorientować się w jego układzie. Dobrze jest podkreślić słowa klucze, określić tematyke zadania.'],\r\n\r\n        ['Zadania z wykorzystaniem materiałów graficznych','Przed przystąpieniem do tego zadania należy uważnie przyjrzeć się wszystkim fotografiom. Zwykle należy wpisać kolejność, w której były opisywane fotografie; czasami zdjęć jest więcej niż wypowiedzi. Innym razem należy zaznaczyć fotografię, która obrazuje treść wypowiedzi. Wtedy najczęściej należy wybrać jedną spośród trzech możliwości.']\r\n    ],\r\n    selCatB:[\r\n        ['Transformacje','To najczęściej spotykany typ zadania. W nawiasie podane są formy podstawowe rzeczowników, czasowników, zaimków, przymiotników, liczebników, przysłówków należy utworzyć poprawną formę tych wyrazów.'],\r\n\r\n        ['Transformacje','Typem transformacji jest przekształcenie zdań przy użyciu podanych wyrazów. W poleceniu znajduje się wzór, według którego powinno się przekształcać zdania, np. wszystkie transformacje należy utworzyć w formie trybu przypuszczającego. Trzeba pamiętać o dodatkowych operacjach, np. zamianie czasownika na rzeczownik, zamianie rzeczowników na odpowiednie zaimki.'],\r\n\r\n        ['Zadania z lukami','Takie zadanie polega na uzupełnieniu tekstu wyrazami, które znajdują się w ramce. Czasami wyrazów jest więcej niż luk w zadaniu, a niektóre wyrazy mogą być użyte więcej niż raz. Należy wybrać odpowiedni wyraz i wpisać w puste miejsce.'],\r\n\r\n        ['Wybór wielokrotny','W tym typie zadania należy podkreślić poprawną formę spośród kilku podanych. Jeżeli potrafimy zidentyfikować dobrą formę, możemy od razu ją podkreślić i nie czytać pozostałych propozycji. Kiedy natomiast nie jesteśmy pewni, pomocna okazać się może metoda eliminacji. Należy rozpocząć od wyeliminowania formy najmniej prawdopodobnej.']\r\n    ],\r\n    selCatC:[\r\n        ['Zadania z jednostkami wyboru wielokrotnego','Wybór informacyjny - pojedyncze napisy'],\r\n\r\n        ['Zadania z jednostkami wyboru wielokrotnego','Wybór informacyjny - akapity'],\r\n\r\n        ['Zadania z jednostkami wyboru wielokrotnego','Wybór wielokrotny - wybór leksykalny'],\r\n\r\n        ['Zadania z jednostkami na dobieranie informacji',''],\r\n\r\n        ['Zadania z lukami','Uzupełnianie luk w tekście usuniętymi z niego wyrazami'],\r\n\r\n        ['Zadania z lukami','Uzupełnianie luk w tekście usuniętymiz niego zdaniami'],\r\n\r\n        ['Zadania z jednostkami prawda/fałsz (P/F)','']\r\n    ],\r\n    selCatD:[\r\n        ['Pisanie','']\r\n    ],\r\n    selCatE:[\r\n        ['Zadanie A - opis fotografii','<p>Zadanie polega na opisaniu fotografii (należy opisać ludzii przedmioty, które się na niej znajdują, a następnie omówić sytuację, którą przedstawia).</p><p>Przydatne zwroty i wyrażenia :</p><table style=\"border: 1px solid black; width:100%;\"><tr><td><p>Na pierwszym planie, na drugim planie, obok, wokół, w tle, w głębi</p><p>Na fotografii (zdjęciu, obrazku,ilustracji) widzę...  </p><p>Myślę, że... / Sądzę, że... / Wydaje misię, że...</p></td></tr></table>'],\r\n\r\n        ['Zadanie B - monolog (wypowiedź na podany temat)', '<p>Należy umieć wyrazić opinię na podany temat, streścić film lub książkę albo zrelacjonować wydarzenie z przeszłości. Monolog najczęściej dotyczy własnych zainteresowań, doświadczeń i planów.</p><p>Przydatne zwroty i wyrażenia :</p><table style=\"border: 1px solid black; width:100%;\"><tr><td><p>Myślę, że... Sądzę, że... Uważam,że... Moim zdaniem... Z jednej strony... Z drugiej strony... Z kolei..</p></td></tr></table>']\r\n    ]\r\n}","import React, { useContext } from 'react'\r\nimport { MyContext } from '../../context/MyContext';\r\nimport { DescCatHeader, HeadDescExe } from '../headExercise/DescExercise';\r\nimport './statistic.css'\r\n\r\n//------------------------------------------------\r\nvar formatTime= function(secs) {\r\n    var minutes = Math.floor(secs / 60) || 0;\r\n    var seconds = (secs - minutes * 60) || 0;\r\n\r\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\n//------------------------------------------------\r\n\r\nexport const Statistic=()=>{\r\n    const {state}=useContext(MyContext)\r\n    return(\r\n        <div className='statistic'>\r\n            <div className='headerStatistic'>\r\n                <h5>Statystyka</h5>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>Liczba wykonanych zadań :</td>\r\n                        <td>{state.arrStatistic.length}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ilość zdobytych punktów / z możliwych :</td>\r\n                        <td> {state.sumRightPoints} / {state.sumAllPoints}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Procent skuteczności :</td>\r\n                        <td>{(state.sumAllPoints===0)?'0':Math.round((state.sumRightPoints/state.sumAllPoints)*100)}%</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Całkowity czas wykonywania zadań :</td>\r\n                        <td>{formatTime(state.fullTime)}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div id='moreStatistic'>\r\n                <h5>{DescCatHeader[state.arrStatistic[state.arrStatistic.length-1].inputCat][0]}\r\n                    <span> ( {DescCatHeader[state.arrStatistic[state.arrStatistic.length-1].inputCat][1]} )</span>\r\n                </h5>\r\n                {Object.keys(state.arrStatistic).map((item,i)=>{\r\n                    return(\r\n                        <table key={i}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan={2}>{state.arrStatistic[item].selectSubCat+1}.{state.arrStatistic[item].numQuestion+1}. {HeadDescExe[state.arrStatistic[item].inputCat][state.arrStatistic[item].selectSubCat][0]}</th>\r\n                                </tr>\r\n                            </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>Liczba pytań w zadaniu:</td>\r\n                        <td>{state.arrStatistic[item].quantity}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Liczba punktów za jedno pytanie :</td>\r\n                        <td> {state.arrStatistic[item].points}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ilość zdobytych punktów / z możliwych :</td>\r\n                        <td> {state.arrStatistic[item].curRightPoints} / {state.arrStatistic[item].curAllPoints}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Procent skuteczności :</td>\r\n                        <td>{(state.sumAllPoints===0)?'0':(state.arrStatistic[item].curRightPoints/state.arrStatistic[item].curAllPoints)*100}%</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Czas wykonywania :</td>\r\n                        <td>{formatTime(state.arrStatistic[item].timer)}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                    )\r\n                   \r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Statistic } from '../../components/statistic/Statistic'\r\nimport { MyContext } from '../../context/MyContext'\r\nimport './home.css'\r\n\r\n\r\n\r\n\r\nexport const Home = ()=>{\r\n    const {state, radioValCat, radioValMode}=useContext(MyContext)\r\n\r\n    const showDetailStatist=()=>{\r\n       let divMore=document.getElementById('moreStatistic')\r\n       divMore.className=(divMore.className==='active')?'':'active'\r\n    }\r\n    return(\r\n        <div className='home'>\r\n            <div className='homerWrap'>\r\n\r\n            <div className='selectMode'>\r\n                    <div>\r\n                        <input type='radio' id='selMode1' name='selMode' value='selMode1' onChange={radioValMode} defaultChecked={state.inputMode ==='selMode1'?true:false}></input>\r\n                        <label htmlFor=\"selMode1\">Ćwiczenie</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type='radio' id='selMode2' name='selMode' value='selMode2' onChange={radioValMode} defaultChecked={state.inputMode ==='selMode2'?true:false}></input>\r\n                        <label htmlFor=\"selMode2\">Egzamin</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='selectCat'>\r\n                    <div>\r\n                    <input type='radio' id='selCatA' name='selCat'  value='selCatA' onChange={radioValCat}  defaultChecked={state.inputCat ==='selCatA'?true:false} \r\n                    disabled = {(state.inputMode ==='selMode2')? \"disabled\" : \"\"}></input>\r\n                    <label htmlFor=\"selCatA\">Część A - Rozumienie ze słuchu</label>\r\n                    </div>\r\n                    <div>\r\n                    <input type='radio' id='selCatB' name='selCat' value='selCatB' onChange={radioValCat} defaultChecked={state.inputCat ==='selCatB'?true:false}\r\n                    disabled = {(state.inputMode ==='selMode2')? \"disabled\" : \"\"}></input>\r\n                    <label htmlFor=\"selCatB\">Część B - Poprawność gramatyczna</label>\r\n                    </div>\r\n                    <div>\r\n                    <input type='radio' id='selCatC' name='selCat' value='selCatC' onChange={radioValCat} defaultChecked={state.inputCat ==='selCatC'?true:false}\r\n                    disabled = {(state.inputMode ==='selMode2')? \"disabled\" : \"\"}></input>\r\n                    <label htmlFor=\"selCatC\">Część C - Rozumienie tekstów pisanych</label>\r\n                    </div>\r\n                    <div>\r\n                    <input type='radio' id='selCatD' name='selCat' value='selCatD' onChange={radioValCat} defaultChecked={state.inputCat ==='selCatD'?true:false}\r\n                    disabled = {(state.inputMode ==='selMode2')? \"disabled\" : \"\"}></input>\r\n                    <label htmlFor=\"selCatD\">Część D - Pisanie</label>\r\n                    </div>\r\n                    <div>\r\n                    <input type='radio' id='selCatE' name='selCat' value='selCatE' onChange={radioValCat} defaultChecked={state.inputCat ==='selCatE'?true:false}\r\n                    disabled = {(state.inputMode ==='selMode2')? \"disabled\" : \"\"}></input>\r\n                    <label htmlFor=\"selCatE\">Część E - Mówienie</label>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <hr></hr>\r\n                {\r\n                    (state.arrStatistic.length===0)?null:<Statistic></Statistic> \r\n                }\r\n                {\r\n                    (state.arrStatistic.length===0)?null:<button onClick={showDetailStatist}> Dokładnie </button>\r\n                }\r\n                <hr></hr>\r\n                <button>\r\n                    <NavLink to={(state.inputMode ==='selMode1')?'/descript':'/baseScreen'}>Rozpocznij</NavLink>\r\n                </button>\r\n                <hr></hr>\r\n                <div className='descHome'>\r\n                    <h4>Wstęp</h4>\r\n                    <p>\r\n                    Ta strona internetowa jest przeznaczona dla osób przygotowujących się do zdawania egzaminu certyfikatowego z języka polskiego jako obcego na poziomie podstawowym B1.\r\n                    </p>\r\n                    <p>W zbiorze znajdują się wszystkie typy zadań obowiązujące w testach certyfikatowych. Treść i forma ćwiczeń zostały podporządkowane wykazowifunkcji i pojęć językowych, wykazowi tematycznemu i zagadnieniom gramatycznym, które zawarte są w Standardach wymagań egzaminacyjnych! dla poziomu B1.\r\n                    </p>\r\n                     <p>\r\n                     Część A zawiera wszystkie typy zadań, które mogą pojawić się w teście egzaminacyjnym (luki do uzupełnienia, prawda/fałsz, wybór wielokrotny, dobieranie informacji, zadania z wykorzystaniem materiałów graficznych). Teksty do ćwiczeń na rozumienie ze słuchu zostały nagrane.\r\n                    </p>\r\n                    <p>\r\n                    Ćwiczenia sprawdzające umiejętności gramatyczne zostały zamieszczone w części B. Znajdująsię tu zadania, w których trzeba wybrać poprawną formę (wybórwielokrotny, wybórzramki) lub ją stworzyć (zadaniaz lukami, transformacje).\r\n                    </p>\r\n                    <p>\r\n                    Część C zawiera wszystkie typy zadań testujących kompetencję w zakresie rozumienia tekstów pisanych, które mogą pojawić się podczas egzaminu (prawda/fałsz, wybór wielokrotny, dobieranie informacji, zadania z lukami). Wybrane ćwiczenia to wzorcowe formy pisemne, które są wymagane na poziomie Bl (list nieoficjalny formalny, recenzja, podanie). Tym samym, sprawdzając swoje umiejętności w zakresie rozumienia tekstu pisanego, można przypomnieć sobie reguły obowiązujące przytworzeniu niektórych form pisemnych. \r\n                    </p>\r\n                    <p>Część D zawiera dwie wzorcowe formy pisemne (list oficjalny i list nieoficjalny) oraz propozycje tematów prac pisemnych w formie przykładowych zestawów egzaminacyjnych. </p>\r\n                    <p>Część E zawiera wzory wypowiedzi na wskazane tematy, w których wytłuszczono zdania i wyrażenia pomocne przy tworzeniu samodzielnych wypowiedzi. Znaleźć tu można schemat opisu ilustracji, monolog, sytuację komunikacyjną oraz zestawy przykładowych pytań egzaminacyjnych. </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './footer.css'\r\n\r\nexport const Footer = ()=>{\r\n    return(\r\n        <div className='footer'>\r\n            <div className='footerWrap'>\r\n                <p className='copyright'>\r\n                    Copyright © 2021 WebWonderLocker\r\n                </p>\r\n                <p className='myMail'>\r\n                    webwonderlocker@gmail.com\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './header.css'\r\n\r\nexport const Header = (props)=>{\r\n    return(\r\n        <div className='header'>\r\n            <div className='headerWrap'>\r\n                <h3>Egzamin B1</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './headEgzam.css'\r\n\r\nexport const HeadEgzam = ()=>{\r\n    return(\r\n        <div className='headEgzam'>\r\n            <div className='headEgzamWrap'>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { MyContext } from '../../context/MyContext'\r\nimport { HeadDescExe } from './DescExercise'\r\nimport './headExercise.css'\r\n\r\nexport const HeadExercise = ()=>{\r\n    const {state,saveSubCat,saveNumQuestion,hintModeHandler,checkExe}=useContext(MyContext)\r\n    let subCat=state.categories[state.inputCat];\r\n    return(\r\n        <div className='headExercise'>\r\n            <div className='headExerciseWrap'>\r\n                <div>\r\n                    <select id='selSubCat' name='selSubCat' value={state.selectSubCat} onChange={saveSubCat}  >\r\n                    {Object.keys(subCat).map((item, i)=>{\r\n                        return(\r\n                            <option key = {item} value={i} >Typ zadania {item*1+1}</option>\r\n                        )\r\n                    })} \r\n                    </select>\r\n                    <label htmlFor=\"selSubCat\"> Wybór rodzaju</label>\r\n                </div>\r\n                <div>\r\n                    <select id='selQuestion' name='selQuestion' value={state.numQuestion}  onChange={saveNumQuestion} >\r\n                    {Object.keys(subCat[state.selectSubCat]).map((item, i)=>{\r\n                        return(\r\n                            <option key = {item} value={i} >\r\n                                Pytanie numer {i*1+1}</option>\r\n                        )\r\n                    })} \r\n                    </select>\r\n                    <label htmlFor=\"selQuestion\"> Wybór pytania</label>\r\n                </div>\r\n                <div className='hintMode'>\r\n                    <button id='butHint' onClick={hintModeHandler} >{ \r\n                        (state.hintMode)?'ON':'OFF'}\r\n                    </button>\r\n                    <label htmlFor='butHint'>Podpowiedź wyniku</label>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className='desc'>\r\n                <div className='nameCat'><h5>{state.selectSubCat*1+1}.{state.numQuestion*1+1}.</h5></div>\r\n                {/* ----- describe all exercise subcategories */}\r\n                {/* <div className='descExercise' dangerouslySetInnerHTML={{__html:HeadDescExe[state.inputCat][state.selectSubCat]}} /> */}\r\n                <div className='descExercise'>\r\n                    <h5 dangerouslySetInnerHTML={{__html:HeadDescExe[state.inputCat][state.selectSubCat][0]}} />\r\n                    <p dangerouslySetInnerHTML={{__html:HeadDescExe[state.inputCat][state.selectSubCat][1]}} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './navEgzam.css'\r\n\r\nexport const NavEgzam = ()=>{\r\n    return(\r\n        <div className='navEgzam'>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n   //------------------------------------------------\r\n   var formatTime= function(secs) {\r\n    var minutes = Math.floor(secs / 60) || 0;\r\n    var seconds = (secs - minutes * 60) || 0;\r\n\r\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\n//------------------------------------------------\r\nlet sec =0;\r\nexport const UpdateTimer=()=>{\r\n    return sec;\r\n}\r\n\r\n//------------------------------------------------\r\n\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { seconds: 0 };\r\n    }\r\n  \r\n    tick() {\r\n      this.setState(state => ({\r\n        seconds: state.seconds + 1\r\n      }));\r\n      this.x= formatTime(this.state.seconds)\r\n      sec=this.state.seconds\r\n    }\r\n \r\n\r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <span id='timer'>\r\n          {/* Секунды: {this.state.seconds} */}\r\n          {/* Czas: {this.x} */}\r\n          {this.x}\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Timer","import React, { useContext } from 'react'\r\nimport './navExercise.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { MyContext } from '../../context/MyContext'\r\nimport { UpdateTimer } from '../../exercises/Timer'\r\n\r\n\r\nexport const NavExercise = ()=>{\r\n    const {state,next,prev,checkExe,btnExit}=useContext(MyContext)\r\n    return(\r\n        <div className='navExercise'>\r\n            <div>\r\n            <button onClick={prev}><i className=\"fas fa-chevron-left\"></i></button>\r\n            <button id='comeOut' onClick={btnExit}><NavLink to='./'>Wyjdż</NavLink> </button>\r\n            <button onClick={()=>checkExe(UpdateTimer())}\r\n            disabled={(state.isChecked)?true:false}>Sprawdż</button>\r\n            {/* <button onClick={(state.isChecked)?null:checkExe}>Sprawdż</button> */}\r\n            <button onClick={next}><i className=\"fas fa-chevron-right\"></i></button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPause(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 16,\n    viewBox: \"0 0 10 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1.5 0.125C1.73206 0.125 1.95462 0.217187 2.11872 0.381282C2.28281 0.545376 2.375 0.767936 2.375 1V15C2.375 15.2321 2.28281 15.4546 2.11872 15.6187C1.95462 15.7828 1.73206 15.875 1.5 15.875C1.26794 15.875 1.04538 15.7828 0.881282 15.6187C0.717187 15.4546 0.625 15.2321 0.625 15V1C0.625 0.767936 0.717187 0.545376 0.881282 0.381282C1.04538 0.217187 1.26794 0.125 1.5 0.125V0.125ZM8.5 0.125C8.73206 0.125 8.95462 0.217187 9.11872 0.381282C9.28281 0.545376 9.375 0.767936 9.375 1V15C9.375 15.2321 9.28281 15.4546 9.11872 15.6187C8.95462 15.7828 8.73206 15.875 8.5 15.875C8.26794 15.875 8.04538 15.7828 7.88128 15.6187C7.71719 15.4546 7.625 15.2321 7.625 15V1C7.625 0.767936 7.71719 0.545376 7.88128 0.381282C8.04538 0.217187 8.26794 0.125 8.5 0.125V0.125Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPause);\nexport default __webpack_public_path__ + \"static/media/pause.fb885480.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Fragment, useContext, useEffect } from 'react'\r\nimport { MyContext } from '../../context/MyContext'\r\nimport AudioPlayer from '../player/AudioPlayer'\r\nimport './subCatA1.css'\r\n//import trackA1 from \"../../tracks/A1_1.mp3\";\r\nimport { Points } from '../../components/points/Points'\r\n\r\nlet globalComp\r\nlet globalMethod\r\n\r\nexport const Bold=(event)=>{\r\n    //const {save }=useContext(MyContext)\r\n    //console.log('bold1')\r\n     //----seek parent node\r\n    let arrayParent= event.target.parentElement.children\r\n    //-----loop and observe children paragraf\r\n    for(let i=0;i<arrayParent.length;i++){\r\n        //-----get class name of each paragraf\r\n        let classP=arrayParent[i].className\r\n        //translate class from string to array\r\n        let arrClassP=classP.split(\" \")\r\n        //-----loop and seek \"selected\" in array (delete all \"selected class\")\r\n        arrClassP.forEach((element,index) => {\r\n            if(element===\"selected\"){\r\n                //delete \"selected\"\r\n                arrClassP[index]=\"\"\r\n            }\r\n        });\r\n        //-----translate array to string and write in class\r\n        let strClassP=arrClassP.join(\" \")\r\n        arrayParent[i].className=strClassP;\r\n    }\r\n    //----get current element and add class \"selected\"\r\n    let classElem = event.target.className\r\n    event.target.className='selected '+classElem\r\n\r\n    globalMethod(globalComp)\r\n}\r\n\r\n\r\nexport const SubCatA1= (props)=>{\r\n    const {state, save }=useContext(MyContext)\r\n     let arrContent=state.categories[state.inputCat][state.selectSubCat][state.numQuestion]\r\n     let countCard=0\r\n     const decLetter=(num)=>{\r\n         let x;\r\n         switch (num){\r\n            case 0:x='';break;\r\n            case 1:x='a';break;\r\n            case 2:x='b';break;\r\n            case 3:x='c';break;\r\n            default:x='x'\r\n         }\r\n         return x;\r\n     }\r\n    const decoder=(word,i,i2,letter)=>{\r\n        let x;\r\n        switch(word){\r\n            case 'pH':x=<p key={i2}>{countCard}. {i}</p>;break;\r\n            case 'p1':x=<p key={i2} onClick={Bold} style={{cursor:'pointer'}}>{letter}. {i}</p>;break;\r\n            case 'p2':x=<p key={i2} onClick={Bold} style={{cursor:'pointer'}}>{letter}. {i}</p>;break;\r\n            case 'pA':x=<p key={i2} className={'answer'} onClick={Bold} style={{cursor:'pointer'}}>{letter}. {i}</p>;break;\r\n            default:x=<p>Not variant</p>\r\n        }\r\n        return(x)\r\n    }\r\n    const str=[]\r\n    arrContent.card.map((item,i)=>{\r\n        \r\n        countCard++\r\n        let divB=[]\r\n        Object.keys(item.divBl).map((item2,i2)=>{\r\n            let letter=decLetter(i2)\r\n            divB[i2]=decoder(item2,item.divBl[item2],i2,letter)\r\n            return(divB)\r\n        })\r\n        str[i]=divB\r\n    return(str)})\r\n\r\n    const DivRow=()=>{\r\n        let block=[]\r\n        //let row=[]\r\n        //let indRow=0\r\n        str.map((item,i)=>{\r\n            block[i]=<div key={i} className='block'>{item}</div>\r\n        return(block)})\r\n        return(block)\r\n    }\r\n\r\n    const EndSubCatA1=()=>{\r\n        return(\r\n            <div className='subCatA1'>\r\n                <div id='modal'></div>\r\n                <h5>{arrContent.header[0]}</h5>\r\n                <h5>{arrContent.header[1]}</h5>\r\n                {/* <AudioPlayer track={trackA1}></AudioPlayer> */}\r\n                <AudioPlayer tracks={arrContent.tracks} iterate={arrContent.template[0][1]} ></AudioPlayer>\r\n                <div>\r\n                    <div className='row'>\r\n                        <div className='block' style={{position:'relative'}}>\r\n                            <Points quantity={arrContent.card.length} points={arrContent.template[0][0]}></Points>\r\n                        </div>\r\n                        <div className='template block'>\r\n                            <h5>{arrContent.template[1][0]}</h5>\r\n                            <p onClick={Bold}>0. {arrContent.template[1][1]}</p>\r\n                            <p>a. {arrContent.template[1][2][0]}</p>\r\n                            <p><b>b. {arrContent.template[1][2][1]}</b></p>\r\n                            <p>c. {arrContent.template[1][2][2]}</p>\r\n                        </div>\r\n                    </div>\r\n                    <DivRow></DivRow>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    globalMethod=save\r\n    globalComp=<EndSubCatA1></EndSubCatA1>\r\n\r\n\r\n    useEffect(() => {\r\n        save(<EndSubCatA1></EndSubCatA1>)\r\n      }, [save]);\r\n\r\n     \r\n\r\n    return(\r\n        <Fragment >\r\n            <EndSubCatA1></EndSubCatA1>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const AddClass = (Component,ClassName)=>{\r\n    return(props)=>{\r\n        return(\r\n            <div className={ClassName}>\r\n                <Component></Component>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React from 'react'\r\n\r\n   //------------------------------------------------\r\n   var formatTime= function(secs) {\r\n    var minutes = Math.floor(secs / 60) || 0;\r\n    var seconds = (secs - minutes * 60) || 0;\r\n\r\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\n//------------------------------------------------\r\nlet sec =0;\r\nexport const UpdateTimer=()=>{\r\n    return sec;\r\n}\r\n\r\n//------------------------------------------------\r\n//let timeEnd=false\r\nlet setTime=false\r\nlet backCount=10\r\n\r\nclass TimeIterate extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { seconds: 0 };\r\n    }\r\n    \r\n    tick() {\r\n      this.setState(state => ({\r\n        seconds: state.seconds + 1\r\n      }));\r\n      this.x= formatTime(this.state.seconds)\r\n      sec=this.state.seconds\r\n      if(this.props.iterate===2){\r\n        if(this.props.timeEnd && backCount>0 )backCount--\r\n        if(backCount<1){\r\n            if(!setTime){\r\n                setTime=true\r\n                this.props.onPlay(true)\r\n                }\r\n        }\r\n      }\r\n      \r\n    }\r\n \r\n\r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n       setTime=false\r\n       backCount=10\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div id='playTimer'>\r\n            <p>\r\n            {(!this.props.timeEnd)?'Odczyt: 1':null }\r\n            {(this.props.timeEnd && backCount>0)?backCount:null }\r\n            {(this.props.timeEnd && backCount===0)?'Odczyt: 2':null }\r\n          {/* {this.x} */}\r\n            </p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default TimeIterate","import React from \"react\";\r\nimport { ReactComponent as Play } from \"./assets/play.svg\";\r\nimport { ReactComponent as Pause } from \"./assets/pause.svg\";\r\nimport  TimeIterate  from \"./TimeIterate\";\r\n// import { ReactComponent as Next } from \"./assets/next.svg\";\r\n// import { ReactComponent as Prev } from \"./assets/prev.svg\";\r\n\r\nconst AudioControls = ({\r\n  isPlaying,\r\n  onPlayPauseClick,\r\n  onPrevClick,\r\n  onNextClick,\r\n  timerHTML,\r\n  durationHTML,\r\n  iterate,\r\n  timeEnd\r\n}) => (\r\n  <div className=\"audio-controls\">\r\n    {/* <button\r\n      type=\"button\"\r\n      className=\"prev\"\r\n      aria-label=\"Previous\"\r\n      onClick={onPrevClick}\r\n    >\r\n      <Prev />\r\n    </button> */}\r\n    {isPlaying ? (\r\n      <button\r\n        id=\"butPlay\"\r\n        type=\"button\"\r\n        className=\"pause\"\r\n        onClick={() => onPlayPauseClick(false)}\r\n        aria-label=\"Pause\"\r\n      >\r\n        <Pause />\r\n      </button>\r\n    ) : (\r\n      <button\r\n        id=\"butPlay\"\r\n        type=\"button\"\r\n        className=\"play\"\r\n        onClick={() => onPlayPauseClick(true)}\r\n        aria-label=\"Play\"\r\n      >\r\n        <Play />\r\n      </button>\r\n    )}\r\n    {/* <button\r\n      type=\"button\"\r\n      className=\"next\"\r\n      aria-label=\"Next\"\r\n      onClick={onNextClick}\r\n    >\r\n      <Next />\r\n    </button> */}\r\n    {iterate===2?<TimeIterate iterate={iterate} timeEnd={timeEnd} onPlay={onPlayPauseClick}></TimeIterate>:null}\r\n\r\n    {<div id='duration'><p>{timerHTML} / {durationHTML}</p></div>}\r\n  </div>\r\n);\r\n\r\nexport default AudioControls;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport AudioControls from \"./AudioControls\";\r\n//import Backdrop from \"./Backdrop\";\r\nimport \"./styles.css\";\r\n\r\n/*\r\n * Read the blog post here:\r\n * https://letsbuildui.dev/articles/building-an-audio-player-with-react-hooks\r\n */\r\n//const AudioPlayer = ({ tracks }) => {\r\nconst AudioPlayer = (props) => {\r\n    //let tracks=['']\r\n    //const audioSrc=props.track\r\n  // State\r\n  const [trackIndex, setTrackIndex] = useState(0);\r\n  const [trackProgress, setTrackProgress] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [timeEnd, setTimeEnd] = useState(false);\r\n\r\n  let tracks=props.tracks\r\n  const audioSrc=tracks[trackIndex]\r\n  //const audioSrc=tracks[0]\r\n\r\n  // Destructure for conciseness\r\n  ////const { audioSrc } = tracks[trackIndex];\r\n//   const { title, artist, color, image, audioSrc } = tracks[trackIndex];\r\n\r\n  // Refs\r\n   const audioRef = useRef(new Audio(audioSrc));\r\n  const intervalRef = useRef();\r\n  const isReady = useRef(false);\r\n\r\n  // Destructure for conciseness\r\n  const { duration} = audioRef.current;\r\n  //audioRef.current.volume=0.9\r\n  //console.log(audioRef.current.currentTime)\r\n  //console.log(audioRef.current.volume)\r\n\r\n//------------------------------------------------\r\n  var formatTime= function(secs) {\r\n    var minutes = Math.floor(secs / 60) || 0;\r\n    var seconds = (secs - minutes * 60) || 0;\r\n\r\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\r\n  }\r\nvar durationHTML = formatTime(Math.round(duration));\r\n// Determine our current seek position.\r\nvar timerHTML = formatTime(Math.round(trackProgress));\r\n//------------------------------------------------\r\n\r\n\r\n  const currentPercentage = duration\r\n    ? `${(trackProgress / duration) * 100}%`\r\n    : \"0%\";\r\n  const trackStyling = `\r\n    -webkit-gradient(linear, 0% 0%, 100% 0%, color-stop(${currentPercentage}, #fff), color-stop(${currentPercentage}, #777))\r\n  `;\r\n\r\n  const startTimer = () => {\r\n    // Clear any timers already running\r\n    clearInterval(intervalRef.current);\r\n\r\n    \r\n\r\n    intervalRef.current = setInterval(() => {\r\n      if (audioRef.current.ended) {\r\n         toNextTrack();\r\n         \r\n         //timeEnd=true\r\n         if(trackIndex===tracks.length-1)setTimeEnd(true)\r\n         // setIsPlaying(false)\r\n         //setTrackProgress(0)\r\n      } else {\r\n        setTrackProgress(audioRef.current.currentTime);\r\n      }\r\n    }, [1000]);\r\n  };\r\n\r\n  const onScrub = (value) => {\r\n    // Clear any timers already running\r\n    clearInterval(intervalRef.current);\r\n    audioRef.current.currentTime = value;\r\n    setTrackProgress(audioRef.current.currentTime);\r\n  };\r\n\r\n  const onScrubEnd = () => {\r\n    // If not already playing, start\r\n    if (!isPlaying) {\r\n      setIsPlaying(true);\r\n    }\r\n    startTimer();\r\n  };\r\n\r\n  const toPrevTrack = () => {\r\n    if (trackIndex - 1 < 0) {\r\n      setTrackIndex(tracks.length - 1);\r\n    } else {\r\n      setTrackIndex(trackIndex - 1);\r\n    }\r\n  };\r\n\r\n  const toNextTrack = () => {\r\n    if (trackIndex < tracks.length - 1) {\r\n      setTrackIndex(trackIndex + 1);\r\n    } else {\r\n      setIsPlaying(false)\r\n        setTrackProgress(0)\r\n       //setTrackIndex(0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n      startTimer();\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  // Handles cleanup and setup when changing tracks\r\n  useEffect(() => {\r\n    audioRef.current.pause();\r\n\r\n    audioRef.current = new Audio(audioSrc);\r\n    setTrackProgress(audioRef.current.currentTime);\r\n\r\n    if (isReady.current) {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n      startTimer();\r\n    } else {\r\n      // Set the isReady ref as true for the next pass\r\n      isReady.current = true;\r\n    }\r\n  }, [trackIndex]);\r\n\r\n  useEffect(() => {\r\n    // Pause and clean up on unmount\r\n    return () => {\r\n      audioRef.current.pause();\r\n      clearInterval(intervalRef.current);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"audio-player\">\r\n      <div className=\"track-info\">\r\n        {/* <img\r\n          className=\"artwork\"\r\n          src={image}\r\n          alt={`track artwork for ${title} by ${artist}`}\r\n        /> */}\r\n        {/* <h2 className=\"title\">{title}</h2>\r\n        <h3 className=\"artist\">{artist}</h3> */}\r\n        <AudioControls\r\n          isPlaying={isPlaying}\r\n          onPrevClick={toPrevTrack}\r\n          onNextClick={toNextTrack}\r\n          onPlayPauseClick={setIsPlaying}\r\n          timerHTML={timerHTML}\r\n          durationHTML={durationHTML}\r\n          iterate={props.iterate}\r\n          timeEnd={timeEnd}\r\n        />\r\n        \r\n        <input\r\n          type=\"range\"\r\n          value={trackProgress}\r\n          step=\"1\"\r\n          min=\"0\"\r\n          max={duration ? duration : `${duration}`}\r\n          className=\"progress\"\r\n          onChange={(e) => onScrub(e.target.value)}\r\n          onMouseUp={onScrubEnd}\r\n          onKeyUp={onScrubEnd}\r\n          style={{ background: trackStyling }}\r\n        />\r\n      </div>\r\n      {/* <Backdrop\r\n        trackIndex={trackIndex}\r\n        activeColor={color}\r\n        isPlaying={isPlaying}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer;\r\n","import React, { useContext } from 'react'\r\nimport { MyContext } from '../../context/MyContext'\r\nimport Timer from '../../exercises/Timer';\r\n\r\n  //------------------------------------------------\r\n  var formatTime= function(secs) {\r\n    var minutes = Math.floor(secs / 60) || 0;\r\n    var seconds = (secs - minutes * 60) || 0;\r\n\r\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\n//------------------------------------------------\r\n\r\nexport const Points=(props)=>{\r\n    const {state}=useContext(MyContext)\r\n    let sumPoints=props.quantity*props.points;\r\n    let timer=formatTime(state.timerOfComponent)\r\n    return(\r\n        <div className='points'>\r\n            <span className='placePoints'>\r\n                {(state.isChecked)?state.curRightPoints+'p.':'......'} /{' '}\r\n            </span>\r\n            <span>\r\n                {sumPoints}p. ({props.quantity} x {props.points}p.) {' '}\r\n            </span>\r\n            <span>\r\n                Czas: {(state.isChecked)?timer:<Timer></Timer>}\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React, {  useContext, useEffect } from 'react'\r\nimport { MyContext } from '../../context/MyContext'\r\nimport AudioPlayer from '../player/AudioPlayer'\r\nimport './subCatA3.css'\r\nimport { Points } from '../../components/points/Points'\r\n\r\nexport const SubCatA3= (props)=>{\r\n    const {state, save }=useContext(MyContext);\r\n    let arrContent=state.categories[state.inputCat][state.selectSubCat][state.numQuestion]\r\n\r\n    \r\n\r\n    const DivText=()=>{\r\n        let textJSX=[]\r\n        let paragraf=[]\r\n        let textArr=[]\r\n        let count=0\r\n        arrContent.text.map((item,i)=>{\r\n            textArr[i]=item.split(' ')\r\n           // console.log(item)\r\n        })\r\n        //console.log(textArr)\r\n\r\n        paragraf.push(<span key='k1'>{arrContent.template[1][0]} </span>)\r\n        paragraf.push(<input id='hint' key='k2' readOnly type='text' value={arrContent.template[1][1]} size='1'></input>)\r\n\r\n        textArr.map((item,i)=>{\r\n            item.map((item2,i2)=>{\r\n                if(item2==='...'){\r\n                    let ki='inp'+count\r\n                    let ks='sp'+count\r\n        paragraf.push(<span key={i2} className='spanBlock'>\r\n            {' '}<input key={ki} className='inp' type='text' placeholder='.................' size='11'></input>{' '}\r\n            <span key={ks} className=\"hint\">{arrContent.answer[count]}</span>\r\n            </span>)\r\n                    count++ \r\n                }else{\r\n        paragraf.push(<span key={i2}> {item2}</span>)\r\n                }\r\n            })\r\n            textJSX.push(<p key={i}>{paragraf}</p>)\r\n            paragraf=[]\r\n        })\r\n\r\n        return textJSX\r\n        //return paragraf\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='subCatA3'>\r\n            <div id='modal'></div>\r\n            <h5>{arrContent.header[0]}</h5>\r\n            <h5>{arrContent.header[1]}</h5>\r\n            <AudioPlayer tracks={arrContent.tracks} iterate={arrContent.template[0][1]} ></AudioPlayer>\r\n            <Points quantity={arrContent.answer.length} points={arrContent.template[0][0]}></Points>\r\n            <div>\r\n                <DivText></DivText>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { HeadEgzam } from '../../components/headEgzam/HeadEgzam'\r\nimport { DescCatHeader } from '../../components/headExercise/DescExercise'\r\nimport { HeadExercise } from '../../components/headExercise/HeadExercise'\r\nimport { NavEgzam } from '../../components/navEgzam/NavEgzam'\r\nimport { NavExercise } from '../../components/navExercise/NavExercise'\r\n\r\nimport { MyContext } from '../../context/MyContext'\r\nimport { SubCatA1} from '../../exercises/catA/SubCatA1'\r\nimport { SubCatA3 } from '../../exercises/catA/SubCatA3'\r\nimport './baseScreen.css'\r\n//import '../../exercises/catA/SubCatA1'\r\n\r\nexport const BaseScreen = ()=>{\r\n\r\n    const {state}=useContext(MyContext)\r\n    let selSubCatComponent={\r\n        selCatA:[\r\n            <SubCatA1></SubCatA1>,\r\n            <SubCatA1></SubCatA1>,\r\n            <SubCatA3></SubCatA3>\r\n        ],\r\n        selCatB:[],\r\n        selCatC:[],\r\n        selCatD:[],\r\n        selCatE:[]\r\n    }\r\n    let sendComponent=selSubCatComponent[state.inputCat][state.selectSubCat]\r\n    \r\n    return(\r\n        <div className='baseScreen' >\r\n            <div className='baseScreentWrap'>\r\n                    {/*----- top header = dispCat*/}\r\n                {/* <div className='dispCat' dangerouslySetInnerHTML={{__html:DescCatHeader[state.inputCat]}} /> */}\r\n                <div className='dispCat'>\r\n                    <div>\r\n                        <h4>{DescCatHeader[state.inputCat][0]}</h4>\r\n                        <h4>{DescCatHeader[state.inputCat][1]}</h4>\r\n                    </div>\r\n                </div>\r\n                    {/*-----(select/describe/player) header = components HeadExercise or HeadEgzam */}\r\n                {(state.inputMode ==='selMode1')?<HeadExercise/>:<HeadEgzam/>}\r\n               <hr/>\r\n                    {/*-----component methodes of subcategory and content question */}\r\n                {(state.isChanged)?state.sendComponent:sendComponent}\r\n                {/* {state.sendComponent} */}\r\n                <hr></hr>\r\n                    {/*----- Navigation - buttons */}\r\n                {(state.inputMode ==='selMode1')?<NavExercise/>:<NavEgzam/>}\r\n                {/* {state.sendComponent} */}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Fragment } from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport { AddClass } from '../../hoc/AddClass'\r\nimport { Descript } from '../../pages/descript/Descript'\r\n//import { Egzam } from '../../temporary/egzam/Egzam'\r\n//import { Exercise } from '../../temporary/exercise/Exercise'\r\nimport { Home } from '../../pages/home/Home'\r\nimport { Footer } from '../footer/Footer'\r\nimport { Header } from '../header/Header'\r\nimport './layout.css'\r\nimport { BaseScreen } from '../../pages/baseScreen/BaseScreen'\r\n\r\n const Layout = ()=>{\r\n    return(\r\n        <Fragment>\r\n            <Header></Header>\r\n            <div className='content'>\r\n                <div className='routes'>\r\n                    <Switch>\r\n                        <Route path = '/' exact render = {()=> <Home/>}/>  \r\n                        <Route path = '/descript' render = {()=> <Descript/>}/> \r\n                        <Route path = '/baseScreen' render = {()=> <BaseScreen/>}/> \r\n                        {/* <Route path = '/egzam' render = {()=> <Egzam/>}/>  */}\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n            <Footer></Footer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AddClass(Layout,'layout')","import track1 from \"../../tracks/A1_1.mp3\";\r\n\r\nexport const ArrA11 = {\r\n    tracks:[track1],\r\n    header:['Proszę uważnie słuchać tego nagrania i zaznaczyć właściwe odpowiedzi.',\r\n            'Uwaga! Nagranie zostanie odtworzone tylko jeden raz.'],\r\n    template:[  [ 0.5 ,1],\r\n                ['Przykład:','Ta wypowiedź jest typowa:',[\r\n                    'w tramwaju',\r\n                    'w szkole',\r\n                    'na uniwersytecie',\r\n                        1\r\n                ]]],\r\n        card:[\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'w samolocie',\r\n                pA:'w autobusie',\r\n                p2:'w kinie',\r\n            }},\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'w banku',\r\n                p2:'w sklepie',\r\n                pA:'na poczcie',\r\n            }},\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'na poczcie',\r\n                pA:'na stacji benzynowej',\r\n                p2:'w biurze',\r\n            }},\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'w szkole',\r\n                pA:'na poczcie',\r\n                p2:'w biurze',\r\n            }}\r\n        ]\r\n}","export default __webpack_public_path__ + \"static/media/A1_1.7e9669e8.mp3\";","import track1 from \"../../tracks/A1_2.mp3\";\r\n\r\nexport const ArrA12 = {\r\n    tracks:[track1],\r\n    header:['Proszę uważnie słuchać tego nagrania i zaznaczyć właściwe odpowiedzi.',\r\n            'Uwaga! Nagranie zostanie odtworzone tylko jeden raz.'],\r\n    template:[  [ 0.5 ],\r\n                ['Przykład:','Ta wypowiedź jest typowa:',[\r\n                    'w tramwaju',\r\n                    'w szkole',\r\n                    'na uniwersytecie',\r\n                        1\r\n                ]]],\r\n        card:[\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'w samolocie',\r\n                pA:'w autobusie',\r\n                p2:'w kinie',\r\n            }},\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'w banku',\r\n                p2:'w sklepie',\r\n                pA:'na poczcie',\r\n            }},\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'na poczcie',\r\n                pA:'na stacji benzynowej',\r\n                p2:'w biurze',\r\n            }},\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'w szkole',\r\n                pA:'na poczcie',\r\n                p2:'w biurze',\r\n            }}\r\n        ]\r\n}","export default __webpack_public_path__ + \"static/media/A1_2.1921bfaf.mp3\";","import track1 from \"../../tracks/A1_3.mp3\";\r\n\r\nexport const ArrA13 = {\r\n    tracks:[track1],\r\n    header:['Proszę uważnie słuchać tego nagrania i zaznaczyć właściwe odpowiedzi.',\r\n            'Uwaga! Nagranie zostanie odtworzone tylko jeden raz.'],\r\n    template:[  [ 0.5 ],\r\n                ['Przykład:','Ta wypowiedź jest typowa:',[\r\n                    'w tramwaju',\r\n                    'w szkole',\r\n                    'na uniwersytecie',\r\n                        1\r\n                ]]],\r\n        card:[\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'w samolocie',\r\n                pA:'w autobusie',\r\n                p2:'w kinie',\r\n            }},\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'w banku',\r\n                p2:'w sklepie',\r\n                pA:'na poczcie',\r\n            }},\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'na poczcie',\r\n                pA:'na stacji benzynowej',\r\n                p2:'w biurze',\r\n            }},\r\n            {divBl:{\r\n                pH:'Ta wypowiedź jest typowa:',\r\n                p1:'w szkole',\r\n                pA:'na poczcie',\r\n                p2:'w biurze',\r\n            }}\r\n        ]\r\n}","export default __webpack_public_path__ + \"static/media/A1_3.d3294bc9.mp3\";","export default __webpack_public_path__ + \"static/media/A2_1.1bb8eb39.mp3\";","import track1 from \"../../tracks/A2_1.mp3\";\r\nimport track2 from \"../../tracks/sound.mp3\";\r\n\r\nexport const ArrA21 = {\r\n    tracks:[track1],\r\n    header:['Proszę uważnie słuchać tego nagrania i wykonywać zadanie zgodnie z podanym przykładem.',\r\n            'Uwaga! Nagranie zostanie odtworzone dwa razy.'],\r\n    template:[  [ 1, 2 ],\r\n                ['Przykład:','Dziennikarz przeprowadza wywiad z: ',[\r\n                    'kierowcą',\r\n                    'lekarzem',\r\n                    'podróżnikiem'\r\n                ]]],\r\n        card:[\r\n            {divBl:{\r\n                pH:'Lekarz udziela rad na temat:',\r\n                p1:'pomysłu na dobry urlop',\r\n                pA:'kondycji kierowcy podczas podróż',\r\n                p2:'różnych chorób kierowców'\r\n            }},\r\n            {divBl:{\r\n                pH:'Na stan kierowców mogą źle wpływać:',\r\n                pA:'różne dolegliwościi stosowane lekarstwa',\r\n                p1:'zbyt długi sen i silna alergia',\r\n                p2:'bezsenność i stosowane na nią leki'\r\n            }},\r\n            {divBl:{\r\n                pH:'Najwięcej wypadków zdarza się w godzinach:',\r\n                p1:'wieczornych i przed północą',\r\n                pA:'nocnych i rannych',\r\n                p2:'przedpołudniowych'\r\n            }},\r\n            {divBl:{\r\n                pH:'Najlepszą radą na zmęczenie jest:',\r\n                p1:'tylko długi sen',\r\n                pA:'nawet 20 minut snu',\r\n                p2:'nawet 10 minut snu'\r\n            }},\r\n            {divBl:{\r\n                pH:'Pełną koncentrację uzyskuje się:',\r\n                p1:'po krótkim śnie',\r\n                p2:'po 20 minutach snu ',\r\n                pA:'po 10 minutach od przebudzenia'\r\n            }}\r\n        ]\r\n}","export default __webpack_public_path__ + \"static/media/sound.ba7707f0.mp3\";","import track1 from \"../../tracks/A3_1.mp3\";\r\n\r\nexport const ArrA31 ={\r\n    tracks:[track1],\r\n    header:['Słuchając informacji, proszę uzupełnić brakujące słowa','Uwaga! Nagranie zostanie odtworzone dwa razy.'],\r\n    template:[  [ 1, 2 ],\r\n                ['Południowokoreański milioner, który szuka',\r\n                'męża']\r\n            ],\r\n    text:[\r\n        'dla swej córki, „niskiego ... i w zaawansowanym wieku”, otrzymał w ciągu czterech dni ponad 200 ... od potencjalnych kandydatów na ... — podaje prasa seulska.',\r\n        'Około 70-letni ojciec, którego nazwiska nie ujawniono dysponować ma fortuną w ... ponad 100 milionów dolarów. Córka jest jego jedyną spadkobierczynią. W zamieszczonym przez ojca internetowym ogłoszeniu ... podano, że przyszła ... jest chrześcijanką, ma 38 lat, zdobyła ... w Stanach Zjednoczonych i mimo wieku oraz niskiego wzrostu ma bardzo dobry charakter.',\r\n        'Na ogłoszenie ...  bardzo wielu młodych ludzi. Jeden z kandydatów, 20-letni Koreańczyk cytowany przez telewizję, powiedział: ... „Sto milionów to znaczna suma, a ... do takiej rodziny jest warte poświęceń”.'\r\n    ],\r\n    answer:['wzrostu', 'zgłoszeń', 'zięcia','wysokości','matrymonialnym', 'narzeczona', 'wykształcenie','odpowiedziało','wprost','wejście']\r\n}","export default __webpack_public_path__ + \"static/media/A3_1.e98fd46e.mp3\";","import { ArrA11 } from \"./catA/A11\";\r\nimport { ArrA12 } from \"./catA/A12\";\r\nimport { ArrA13 } from \"./catA/A13\";\r\nimport { ArrA21 } from \"./catA/A21\";\r\nimport { ArrA31 } from \"./catA/A31\";\r\n\r\n\r\nexport const AllCat={\r\n    selCatA:[\r\n      [ArrA11,\r\n       ArrA12,\r\n       ArrA13],\r\n\r\n      [ArrA21],\r\n      \r\n      [ArrA31,\r\n       ArrA31],\r\n      [3],\r\n      [3],\r\n      [3]\r\n    ],\r\n    selCatB:[\r\n      [ArrA12,\r\n        ArrA12,\r\n        \"<p>SelCatB</p> <div> <h3>header 12</h3><p>paragraf</p></div><div><h4>header4</h4><p>parafraf2</p></div>\",\r\n        \"<p>NewYork</p> <div> <h3>header 2</h3><p>paragraf a52</p></div><div><h4>header4</h4><p>parafrafa52</p></div>\"],\r\n      [3],\r\n      [3],\r\n      [3]\r\n    ],\r\n    selCatC:[\r\n        [1,\r\n        2,\r\n        3],\r\n        [3],\r\n        [3],\r\n        [3],\r\n        [3],\r\n        [3],\r\n        [3]\r\n      ],\r\n    \r\n    selCatD:[\r\n        [3]\r\n      ],\r\n      selCatE:[\r\n        [1],\r\n        [2]\r\n      ],\r\n}","\nimport React from 'react';\nimport './App.css';\nimport Layout from './components/layout/Layout';\nimport { MyContext } from './context/MyContext';\nimport { AllCat } from './exercises/AllCatDef';\n\n\n\nclass App extends React.Component{\n  \n  constructor(props){\n    super(props);\n    this.state={\n      categories:AllCat,\n      \n      inputCat:'selCatA',\n      \n      selectSubCat:0,\n      numQuestion:0,\n\n      timerOfComponent:0,\n      fullTime:0,\n      curRightPoints:0,\n      sumRightPoints:0,\n      curAllPoints:0,\n      sumAllPoints:0,\n      arrStatistic:[],\n\n      isChecked:false,\n      isChanged:false,\n\n      inputMode:'selMode1',\n      hintMode:false\n     // sendComponent:<GlCatA1></GlCatA1>,\n      //sendComponent:<SubCatA1></SubCatA1>,\n      \n      \n  }\n}\n \n //--------- function click on button hint result\n hintModeHandler=(event)=>{\n   let hintMode=this.state.hintMode\n   let classEvent=event.target\n   hintMode=(hintMode)?false:true\n   classEvent.className=(classEvent.className==='akitve')?'':'akitve'\n   \n    this.setState({hintMode})\n }\n //--------- function click on button exit\n  btnExit=()=>{\n    this.setState({isChanged:false})\n      this.setState({isChecked:false})\n  }\n //--------- function check exercise \n  save = async (compN)=>{\n  this.setState({sendComponent:compN})\n  this.setState({isChanged:true})\n }\n\n //--------- function check exercise A1\n checkExe=(timer)=>{\n   document.getElementById('modal').className='checked';\n    let arrElemAnswer=document.querySelectorAll(\".answer\")\n    let state=this.state\n    let hint=this.state.hintMode\n    let rightAnswer=0\n\n    arrElemAnswer.forEach((element,index) => {\n      element.style.color=(hint)?\"green\":'black'\n      let arr=element.className.split(\" \")\n      for(let i=0;i<arr.length;i++){\n        if(arr[i]===\"selected\"){\n          element.style.color=\"green\"\n          rightAnswer++\n        }\n      }\n      })\n\n      if(!this.state.isChecked){\n        let points=state.categories[state.inputCat][state.selectSubCat][state.numQuestion].template[0][0];\n      let curAllPoints=arrElemAnswer.length*points\n      let sumAllPoints=this.state.sumAllPoints+curAllPoints\n      let curRightPoints=rightAnswer*points\n      let sumRightPoints=this.state.sumRightPoints+curRightPoints\n      let arrCurStatist={inputCat:state.inputCat,\n                        selectSubCat:state.selectSubCat,\n                        numQuestion:state.numQuestion,\n                        curRightPoints,\n                        curAllPoints,\n                        quantity:arrElemAnswer.length,\n                        points,\n                        timer}\n      let arrStatistic=[...state.arrStatistic]\n      arrStatistic.push(arrCurStatist)\n      //if(!this.state.isChecked)this.setState({arrStatistic})\n      this.setState({arrStatistic})\n      this.setState({curRightPoints})\n      this.setState({curAllPoints})\n      this.setState({sumRightPoints})\n      this.setState({sumAllPoints})\n      this.setState({fullTime:timer+this.state.fullTime})\n      this.setState({timerOfComponent:timer})\n      }\n      \n\n      this.setState({isChecked:true})\n }\n \n //--------- function next inc number question\n  next=()=>{ \n      let numSubCat=this.state.categories[this.state.inputCat].length\n      let numQuest=this.state.categories[this.state.inputCat][this.state.selectSubCat].length\n      let incSubCat=this.state.selectSubCat*1\n      let incQuest=this.state.numQuestion*1\n      if(incQuest===numQuest-1){\n        if(incSubCat===numSubCat-1){\n          return\n        }else{\n              incSubCat++\n              incQuest=0\n        }\n      }else{\n        incQuest++\n      }\n      this.setState({numQuestion:incQuest, selectSubCat:incSubCat})\n      this.setState({isChanged:false})\n      this.setState({isChecked:false})\n  } \n //--------- function prev dec number question\n  prev=()=>{ \n      let numQuest=this.state.categories[this.state.inputCat][(this.state.selectSubCat===0)?0:this.state.selectSubCat-1].length\n      let decSubCat=this.state.selectSubCat*1\n      let decQuest=this.state.numQuestion*1\n      if(decQuest===0){\n        if(decSubCat===0){\n          return\n        }else{\n              decSubCat--\n              decQuest=numQuest-1\n        }\n      }else{\n        decQuest--\n      }\n      this.setState({numQuestion:decQuest, selectSubCat:decSubCat})\n      this.setState({isChanged:false})\n      this.setState({isChecked:false})\n  } \n //--------- function value checked selected categorie\n  radioValCat=()=>{\n      var ele = document.getElementsByName(\"selCat\"); \n      var radVal;\n      for(var i = 0; i < ele.length; i++) { \n          if(ele[i].checked) \n         radVal=ele[i].value\n      } \n      this.setState({inputCat:radVal,selectSubCat:0,numQuestion:0})\n  } \n  //--------- function value checked selected mode\n  radioValMode=()=>{ \n    var ele = document.getElementsByName(\"selMode\"); \n    var radVal;\n    for(var i = 0; i < ele.length; i++) { \n        if(ele[i].checked) \n       radVal=ele[i].value\n    } \n    this.setState({inputMode:radVal})\n} \n  //--------- function setState selected subcategorie\n  saveSubCat=(event)=>{ \n    this.setState({selectSubCat:event.target.selectedIndex})\n    this.setState({numQuestion:0})\n    this.setState({isChanged:false})\n    this.setState({isChecked:false})\n} \n  //--------- function setState selected number question\n  saveNumQuestion=(event)=>{ \n    this.setState({numQuestion:event.target.selectedIndex})\n    this.setState({isChanged:false})\n    this.setState({isChecked:false})\n} \n  //----------------------------------------\n  componentDidMount() {\n    //console.log(\"cdm\")\n  }\n  componentDidUpdate(){\n    console.log(\"update\")\n  }\n\n  render(){\n    // console.log(\"render\")\n    return(\n      <MyContext.Provider \n        value = {{state: this.state, \n                  radioValCat: this.radioValCat,\n                  radioValMode: this.radioValMode,\n                  saveSubCat:this.saveSubCat,\n                  saveNumQuestion:this.saveNumQuestion,\n                  next:this.next,\n                  prev:this.prev,\n                  checkExe:this.checkExe,\n                  setState:this.setState,\n                  save:this.save,\n                  btnExit:this.btnExit,\n                  hintModeHandler:this.hintModeHandler\n                   }}>\n                         \n        <Layout></Layout>\n      </MyContext.Provider >\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nconst app=\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}